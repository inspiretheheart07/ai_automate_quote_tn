name: Python CI

on:
  schedule:
    - cron: "30 1,3,5,7,9,11,13,15 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GEMENI_KEY: ${{ secrets.GEMENI_KEY }}
      GEMENI_MODEL: ${{ secrets.GEMENI_MODEL }}
      ADJECTIVES: ${{ secrets.ADJECTIVES }}
      THEMES: ${{ secrets.THEMES }}
      LANGUAGE: ${{ secrets.LANGUAGE }}
      S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      S3_SECRETE_KEY: ${{ secrets.S3_SECRETE_KEY }}
      S3_ZONE: ${{ secrets.S3_ZONE }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      FB_VERSION: ${{ secrets.FB_VERSION }}
      FB_PAGE_ID: ${{ secrets.FB_PAGE_ID }}
      FB_PAGE_TOKEN: ${{ secrets.FB_PAGE_TOKEN }}
      INSTA_PAGE_ID: ${{ secrets.INSTA_PAGE_ID }}
      THREADS_VERSION: ${{ secrets.THREADS_VERSION }}
      S3_URL: ${{ secrets.S3_URL }}
      THREADS_PAGE_ID: ${{ secrets.THREADS_PAGE_ID }}
      THREADS_PAGE_TOKEN: ${{ secrets.THREADS_PAGE_TOKEN }}
      YT_JSON: ${{ secrets.YT_JSON }}
      DRIVE_LINK: ${{ secrets.DRIVE_LINK }}
      JSON_CLIENT_YT: ${{ secrets.JSON_CLIENT_YT }}
      JSON_OAUTH_YT: ${{ secrets.JSON_OAUTH_YT }}
      INSTA_PAGE_TOKEN: ${{ secrets.INSTA_PAGE_TOKEN }}


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

        with:
          python-version: '3.11.0'

      - name: Set up apt
        run: |
            sudo apt update
            sudo apt install --fix-missing

      - name: Install FFmpeg
        run: sudo apt-get install -y ffmpeg

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install private repo manually using GitHub token
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          pip install git+https://$GH_TOKEN@github.com/simplycodesmart/automate_quote_ai.git

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Format and save client_secrets.json
        run: |
          python -c "
          import json
          import os
      
          # Load the client secrets from the GitHub secret (stored in JSON_OAUTH)
          client_secrets = os.getenv('JSON_OAUTH')
          
          # Debugging: Check if client_secrets is set
          if client_secrets is None:
              print('Error: JSON_OAUTH environment variable is not set.')
              exit(1)
      
          
      
          # Parse the secret into a JSON object
          client_secrets_dict = json.loads(client_secrets)
      
          # Re-encode the JSON object with double quotes
          with open('client_secrets.json', 'w') as f:
              json.dump(client_secrets_dict, f, indent=2)
      
          print('client_secrets.json successfully written')"
        env:
          JSON_OAUTH: ${{ secrets.JSON_CLIENT_YT }}  # Pass the secret here


      - name: Format and save oauth.json
        run: |
            python -c "
            import json
            import os
    
            # Load the client secrets from the GitHub secret (stored in JSON_OAUTH_MAIN)
            client_secrets = os.getenv('JSON_OAUTH_MAIN')
            
            # Debugging: Check if client_secrets is set
            
            
            if not client_secrets:
                exit('Error: JSON_OAUTH_MAIN is not set.')
    
            # Parse the secret into a JSON object
            client_secrets_dict = json.loads(client_secrets)
    
            # Re-encode the JSON object with double quotes
            with open('oauth.json', 'w') as f:
                json.dump(client_secrets_dict, f, indent=2)
    
            print('oauth.json successfully written')"
        env:
          JSON_OAUTH_MAIN: ${{ secrets.JSON_OAUTH_YT }}  # Pass the secret here

      - name: Run Process
        run: python te_quote.py
